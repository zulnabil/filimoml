{"version":3,"sources":["webpack:///./src/pages/predict.js"],"names":["getMeanArray","arr","map","col","i","row","reduce","acc","c","length","Train","React","useState","files","setFiles","itemsRef","useRef","setDataStore","analyzer","setAnalyzer","mfccTotal","setMfccTotal","useLayoutEffect","start","handleStopTrain","a","stop","value","curr","concat","console","log","fetch","method","headers","body","JSON","stringify","mfcc0","mfcc1","mfcc2","mfcc3","mfcc4","mfcc5","mfcc6","mfcc7","mfcc8","mfcc9","mfcc10","mfcc11","mfcc12","then","res","json","data","style","padding","type","multiple","onChange","event","Array","from","target","file","URL","createObjectURL","current","slice","onClick","handleTrainAll","index","parseFloat","play","onended","key","ref","el","src","controls","onPlay","audioContext","AudioContext","source","createMediaElementSource","connect","destination","Meyda","createMeydaAnalyzer","bufferSize","featureExtractors","callback","features","mfcc","handleTrain","onEnded","margin"],"mappings":"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","file":"component---src-pages-predict-js-99685545a81b1f5153bc.js","sourcesContent":["import React from \"react\"\nimport Meyda from \"meyda\"\n\nfunction getMeanArray(arr) {\n  let meanArr = arr[0].map((col, i) => {\n    return arr.map(row => row[i]).reduce((acc, c) => acc + c, 0) / arr.length\n  })\n  return meanArr\n}\n\n// const blob = window.URL || window.webkitURL\n\nfunction Train() {\n  const [files, setFiles] = React.useState([])\n  const [elRefs, setElRefs] = React.useState([])\n  const itemsRef = React.useRef([])\n  const [dataStore, setDataStore] = React.useState([])\n\n  const handleUpload = event => {\n    // event.preventDefault()\n    Array.from(event.target.files).map(file => {\n      setFiles(curr => curr.concat(URL.createObjectURL(file)))\n    })\n    itemsRef.current = itemsRef.current.slice(0, event.target.files.length)\n    // setElRefs(elRefs =>\n    //   Array.from(event.target.files).map((_, i) => elRefs[i] || createRef())\n    // )\n  }\n\n  const [analyzer, setAnalyzer] = React.useState(null)\n  const [mfccTotal, setMfccTotal] = React.useState([])\n  const [label, setLabel] = React.useState(\"\")\n\n  const handleTrain = i => {\n    setMfccTotal([])\n    const audioContext = new AudioContext()\n    // console.log(itemsRef.current[i])\n    const source = audioContext.createMediaElementSource(itemsRef.current[i])\n    source.connect(audioContext.destination)\n    setAnalyzer(\n      Meyda.createMeydaAnalyzer({\n        audioContext: audioContext,\n        source: source,\n        bufferSize: 512,\n        featureExtractors: [\"mfcc\"],\n        callback: features => {\n          setMfccTotal(curr => curr.concat([features.mfcc]))\n        },\n      })\n    )\n    // analyzer.start()\n  }\n\n  React.useLayoutEffect(() => {\n    if (analyzer) {\n      analyzer.start()\n    }\n  }, [analyzer])\n\n  const handleStopTrain = async (i) => {\n    analyzer.stop()\n    let value = await getMeanArray(mfccTotal)\n    setDataStore(curr => curr.concat([value]))\n    console.log(i+1)\n    console.log(value)\n    setMfccTotal([])\n\n    console.log(\"Memprediksi kelas emosi...\")\n      fetch(`http://filimoml.com/speeches/predict`, {\n        method: \"post\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          mfcc0: value[0],\n          mfcc1: value[1],\n          mfcc2: value[2],\n          mfcc3: value[3],\n          mfcc4: value[4],\n          mfcc5: value[5],\n          mfcc6: value[6],\n          mfcc7: value[7],\n          mfcc8: value[8],\n          mfcc9: value[9],\n          mfcc10: value[10],\n          mfcc11: value[11],\n          mfcc12: value[12],\n        }),\n      })\n        .then(res => res.json())\n        .then(data => console.log(data))\n  }\n\n  const handleTrainAll = (index = 0) => {\n      console.log(\n        `[${parseFloat(index) + 1}/${files.length}] Mengekstrak fitur MFCC`\n      )\n      itemsRef.current[index].play()\n      itemsRef.current[index].onended = function() {\n        if (index < (files.length-1)) {\n          handleTrainAll(index+1)\n        }\n      }\n  }\n\n\n\n  return (\n    <div style={{ padding: 50 }}>\n      <input type=\"file\" multiple onChange={handleUpload} />\n      <button onClick={() => handleTrainAll()}>Train</button>\n      <br />\n      {files\n        ? files.map((file, i) => {\n            return (\n              <audio\n                key={i}\n                ref={el => (itemsRef.current[i] = el)}\n                src={file}\n                controls\n                onPlay={() => handleTrain(i)}\n                onEnded={() => handleStopTrain(i)}\n                style={{ margin: 15 }}\n              />\n            )\n          })\n        : null}\n    </div>\n  )\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport default Train\n"],"sourceRoot":""}